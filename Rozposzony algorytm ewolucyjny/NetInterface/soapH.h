/* soapH.h
   Generated by gSOAP 2.7.15 from NetInteface.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#define soap_write_bool(soap, data) ( soap_begin_send(soap) || (soap_serialize_bool(soap, data), 0) || soap_put_bool(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) ::soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) ::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) ::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) ::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) ::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) ::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__sendMessage
#define SOAP_TYPE_ns__sendMessage (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sendMessage(struct soap*, struct ns__sendMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sendMessage(struct soap*, const struct ns__sendMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sendMessage(struct soap*, const char*, int, const struct ns__sendMessage *, const char*);
SOAP_FMAC3 struct ns__sendMessage * SOAP_FMAC4 soap_in_ns__sendMessage(struct soap*, const char*, struct ns__sendMessage *, const char*);

#define soap_write_ns__sendMessage(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sendMessage(soap, data), 0) || soap_put_ns__sendMessage(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sendMessage(struct soap*, const struct ns__sendMessage *, const char*, const char*);

#define soap_read_ns__sendMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sendMessage(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__sendMessage * SOAP_FMAC4 soap_get_ns__sendMessage(struct soap*, struct ns__sendMessage *, const char*, const char*);

#define soap_new_ns__sendMessage(soap, n) ::soap_instantiate_ns__sendMessage(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sendMessage(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sendMessage * SOAP_FMAC2 soap_instantiate_ns__sendMessage(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sendMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__sendMessageResponse
#define SOAP_TYPE_ns__sendMessageResponse (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sendMessageResponse(struct soap*, struct ns__sendMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sendMessageResponse(struct soap*, const struct ns__sendMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sendMessageResponse(struct soap*, const char*, int, const struct ns__sendMessageResponse *, const char*);
SOAP_FMAC3 struct ns__sendMessageResponse * SOAP_FMAC4 soap_in_ns__sendMessageResponse(struct soap*, const char*, struct ns__sendMessageResponse *, const char*);

#define soap_write_ns__sendMessageResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sendMessageResponse(soap, data), 0) || soap_put_ns__sendMessageResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sendMessageResponse(struct soap*, const struct ns__sendMessageResponse *, const char*, const char*);

#define soap_read_ns__sendMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sendMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__sendMessageResponse * SOAP_FMAC4 soap_get_ns__sendMessageResponse(struct soap*, struct ns__sendMessageResponse *, const char*, const char*);

#define soap_new_ns__sendMessageResponse(soap, n) ::soap_instantiate_ns__sendMessageResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sendMessageResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sendMessageResponse * SOAP_FMAC2 soap_instantiate_ns__sendMessageResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sendMessageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getConnectedNodes
#define SOAP_TYPE_ns__getConnectedNodes (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getConnectedNodes(struct soap*, struct ns__getConnectedNodes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getConnectedNodes(struct soap*, const struct ns__getConnectedNodes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getConnectedNodes(struct soap*, const char*, int, const struct ns__getConnectedNodes *, const char*);
SOAP_FMAC3 struct ns__getConnectedNodes * SOAP_FMAC4 soap_in_ns__getConnectedNodes(struct soap*, const char*, struct ns__getConnectedNodes *, const char*);

#define soap_write_ns__getConnectedNodes(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getConnectedNodes(soap, data), 0) || soap_put_ns__getConnectedNodes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getConnectedNodes(struct soap*, const struct ns__getConnectedNodes *, const char*, const char*);

#define soap_read_ns__getConnectedNodes(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getConnectedNodes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getConnectedNodes * SOAP_FMAC4 soap_get_ns__getConnectedNodes(struct soap*, struct ns__getConnectedNodes *, const char*, const char*);

#define soap_new_ns__getConnectedNodes(soap, n) ::soap_instantiate_ns__getConnectedNodes(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getConnectedNodes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getConnectedNodes * SOAP_FMAC2 soap_instantiate_ns__getConnectedNodes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getConnectedNodes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getConnectedNodesResponse
#define SOAP_TYPE_ns__getConnectedNodesResponse (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getConnectedNodesResponse(struct soap*, struct ns__getConnectedNodesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getConnectedNodesResponse(struct soap*, const struct ns__getConnectedNodesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getConnectedNodesResponse(struct soap*, const char*, int, const struct ns__getConnectedNodesResponse *, const char*);
SOAP_FMAC3 struct ns__getConnectedNodesResponse * SOAP_FMAC4 soap_in_ns__getConnectedNodesResponse(struct soap*, const char*, struct ns__getConnectedNodesResponse *, const char*);

#define soap_write_ns__getConnectedNodesResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getConnectedNodesResponse(soap, data), 0) || soap_put_ns__getConnectedNodesResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getConnectedNodesResponse(struct soap*, const struct ns__getConnectedNodesResponse *, const char*, const char*);

#define soap_read_ns__getConnectedNodesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getConnectedNodesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getConnectedNodesResponse * SOAP_FMAC4 soap_get_ns__getConnectedNodesResponse(struct soap*, struct ns__getConnectedNodesResponse *, const char*, const char*);

#define soap_new_ns__getConnectedNodesResponse(soap, n) ::soap_instantiate_ns__getConnectedNodesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getConnectedNodesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getConnectedNodesResponse * SOAP_FMAC2 soap_instantiate_ns__getConnectedNodesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getConnectedNodesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__newTask
#define SOAP_TYPE_ns__newTask (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__newTask(struct soap*, struct ns__newTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__newTask(struct soap*, const struct ns__newTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__newTask(struct soap*, const char*, int, const struct ns__newTask *, const char*);
SOAP_FMAC3 struct ns__newTask * SOAP_FMAC4 soap_in_ns__newTask(struct soap*, const char*, struct ns__newTask *, const char*);

#define soap_write_ns__newTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__newTask(soap, data), 0) || soap_put_ns__newTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__newTask(struct soap*, const struct ns__newTask *, const char*, const char*);

#define soap_read_ns__newTask(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__newTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__newTask * SOAP_FMAC4 soap_get_ns__newTask(struct soap*, struct ns__newTask *, const char*, const char*);

#define soap_new_ns__newTask(soap, n) ::soap_instantiate_ns__newTask(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__newTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__newTask * SOAP_FMAC2 soap_instantiate_ns__newTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__newTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__newTaskResponse
#define SOAP_TYPE_ns__newTaskResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__newTaskResponse(struct soap*, struct ns__newTaskResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__newTaskResponse(struct soap*, const struct ns__newTaskResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__newTaskResponse(struct soap*, const char*, int, const struct ns__newTaskResponse *, const char*);
SOAP_FMAC3 struct ns__newTaskResponse * SOAP_FMAC4 soap_in_ns__newTaskResponse(struct soap*, const char*, struct ns__newTaskResponse *, const char*);

#define soap_write_ns__newTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__newTaskResponse(soap, data), 0) || soap_put_ns__newTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__newTaskResponse(struct soap*, const struct ns__newTaskResponse *, const char*, const char*);

#define soap_read_ns__newTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__newTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__newTaskResponse * SOAP_FMAC4 soap_get_ns__newTaskResponse(struct soap*, struct ns__newTaskResponse *, const char*, const char*);

#define soap_new_ns__newTaskResponse(soap, n) ::soap_instantiate_ns__newTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__newTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__newTaskResponse * SOAP_FMAC2 soap_instantiate_ns__newTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__newTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setAppParameter
#define SOAP_TYPE_ns__setAppParameter (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setAppParameter(struct soap*, struct ns__setAppParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setAppParameter(struct soap*, const struct ns__setAppParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setAppParameter(struct soap*, const char*, int, const struct ns__setAppParameter *, const char*);
SOAP_FMAC3 struct ns__setAppParameter * SOAP_FMAC4 soap_in_ns__setAppParameter(struct soap*, const char*, struct ns__setAppParameter *, const char*);

#define soap_write_ns__setAppParameter(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setAppParameter(soap, data), 0) || soap_put_ns__setAppParameter(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setAppParameter(struct soap*, const struct ns__setAppParameter *, const char*, const char*);

#define soap_read_ns__setAppParameter(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setAppParameter(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setAppParameter * SOAP_FMAC4 soap_get_ns__setAppParameter(struct soap*, struct ns__setAppParameter *, const char*, const char*);

#define soap_new_ns__setAppParameter(soap, n) ::soap_instantiate_ns__setAppParameter(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setAppParameter(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setAppParameter * SOAP_FMAC2 soap_instantiate_ns__setAppParameter(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setAppParameter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setAppParameterResponse
#define SOAP_TYPE_ns__setAppParameterResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setAppParameterResponse(struct soap*, struct ns__setAppParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setAppParameterResponse(struct soap*, const struct ns__setAppParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setAppParameterResponse(struct soap*, const char*, int, const struct ns__setAppParameterResponse *, const char*);
SOAP_FMAC3 struct ns__setAppParameterResponse * SOAP_FMAC4 soap_in_ns__setAppParameterResponse(struct soap*, const char*, struct ns__setAppParameterResponse *, const char*);

#define soap_write_ns__setAppParameterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setAppParameterResponse(soap, data), 0) || soap_put_ns__setAppParameterResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setAppParameterResponse(struct soap*, const struct ns__setAppParameterResponse *, const char*, const char*);

#define soap_read_ns__setAppParameterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setAppParameterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setAppParameterResponse * SOAP_FMAC4 soap_get_ns__setAppParameterResponse(struct soap*, struct ns__setAppParameterResponse *, const char*, const char*);

#define soap_new_ns__setAppParameterResponse(soap, n) ::soap_instantiate_ns__setAppParameterResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setAppParameterResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setAppParameterResponse * SOAP_FMAC2 soap_instantiate_ns__setAppParameterResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setAppParameterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getAppStatus
#define SOAP_TYPE_ns__getAppStatus (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getAppStatus(struct soap*, struct ns__getAppStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getAppStatus(struct soap*, const struct ns__getAppStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getAppStatus(struct soap*, const char*, int, const struct ns__getAppStatus *, const char*);
SOAP_FMAC3 struct ns__getAppStatus * SOAP_FMAC4 soap_in_ns__getAppStatus(struct soap*, const char*, struct ns__getAppStatus *, const char*);

#define soap_write_ns__getAppStatus(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getAppStatus(soap, data), 0) || soap_put_ns__getAppStatus(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getAppStatus(struct soap*, const struct ns__getAppStatus *, const char*, const char*);

#define soap_read_ns__getAppStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getAppStatus(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getAppStatus * SOAP_FMAC4 soap_get_ns__getAppStatus(struct soap*, struct ns__getAppStatus *, const char*, const char*);

#define soap_new_ns__getAppStatus(soap, n) ::soap_instantiate_ns__getAppStatus(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getAppStatus(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getAppStatus * SOAP_FMAC2 soap_instantiate_ns__getAppStatus(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getAppStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getAppStatusResponse
#define SOAP_TYPE_ns__getAppStatusResponse (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getAppStatusResponse(struct soap*, struct ns__getAppStatusResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getAppStatusResponse(struct soap*, const struct ns__getAppStatusResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getAppStatusResponse(struct soap*, const char*, int, const struct ns__getAppStatusResponse *, const char*);
SOAP_FMAC3 struct ns__getAppStatusResponse * SOAP_FMAC4 soap_in_ns__getAppStatusResponse(struct soap*, const char*, struct ns__getAppStatusResponse *, const char*);

#define soap_write_ns__getAppStatusResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getAppStatusResponse(soap, data), 0) || soap_put_ns__getAppStatusResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getAppStatusResponse(struct soap*, const struct ns__getAppStatusResponse *, const char*, const char*);

#define soap_read_ns__getAppStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getAppStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getAppStatusResponse * SOAP_FMAC4 soap_get_ns__getAppStatusResponse(struct soap*, struct ns__getAppStatusResponse *, const char*, const char*);

#define soap_new_ns__getAppStatusResponse(soap, n) ::soap_instantiate_ns__getAppStatusResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getAppStatusResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getAppStatusResponse * SOAP_FMAC2 soap_instantiate_ns__getAppStatusResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getAppStatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getSpecimens
#define SOAP_TYPE_ns__getSpecimens (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getSpecimens(struct soap*, struct ns__getSpecimens *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getSpecimens(struct soap*, const struct ns__getSpecimens *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getSpecimens(struct soap*, const char*, int, const struct ns__getSpecimens *, const char*);
SOAP_FMAC3 struct ns__getSpecimens * SOAP_FMAC4 soap_in_ns__getSpecimens(struct soap*, const char*, struct ns__getSpecimens *, const char*);

#define soap_write_ns__getSpecimens(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getSpecimens(soap, data), 0) || soap_put_ns__getSpecimens(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getSpecimens(struct soap*, const struct ns__getSpecimens *, const char*, const char*);

#define soap_read_ns__getSpecimens(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getSpecimens(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getSpecimens * SOAP_FMAC4 soap_get_ns__getSpecimens(struct soap*, struct ns__getSpecimens *, const char*, const char*);

#define soap_new_ns__getSpecimens(soap, n) ::soap_instantiate_ns__getSpecimens(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getSpecimens(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getSpecimens * SOAP_FMAC2 soap_instantiate_ns__getSpecimens(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getSpecimens(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getSpecimensResponse
#define SOAP_TYPE_ns__getSpecimensResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getSpecimensResponse(struct soap*, struct ns__getSpecimensResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getSpecimensResponse(struct soap*, const struct ns__getSpecimensResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getSpecimensResponse(struct soap*, const char*, int, const struct ns__getSpecimensResponse *, const char*);
SOAP_FMAC3 struct ns__getSpecimensResponse * SOAP_FMAC4 soap_in_ns__getSpecimensResponse(struct soap*, const char*, struct ns__getSpecimensResponse *, const char*);

#define soap_write_ns__getSpecimensResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getSpecimensResponse(soap, data), 0) || soap_put_ns__getSpecimensResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getSpecimensResponse(struct soap*, const struct ns__getSpecimensResponse *, const char*, const char*);

#define soap_read_ns__getSpecimensResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getSpecimensResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getSpecimensResponse * SOAP_FMAC4 soap_get_ns__getSpecimensResponse(struct soap*, struct ns__getSpecimensResponse *, const char*, const char*);

#define soap_new_ns__getSpecimensResponse(soap, n) ::soap_instantiate_ns__getSpecimensResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getSpecimensResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getSpecimensResponse * SOAP_FMAC2 soap_instantiate_ns__getSpecimensResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getSpecimensResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__unRegistNode
#define SOAP_TYPE_ns__unRegistNode (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__unRegistNode(struct soap*, struct ns__unRegistNode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__unRegistNode(struct soap*, const struct ns__unRegistNode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__unRegistNode(struct soap*, const char*, int, const struct ns__unRegistNode *, const char*);
SOAP_FMAC3 struct ns__unRegistNode * SOAP_FMAC4 soap_in_ns__unRegistNode(struct soap*, const char*, struct ns__unRegistNode *, const char*);

#define soap_write_ns__unRegistNode(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__unRegistNode(soap, data), 0) || soap_put_ns__unRegistNode(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__unRegistNode(struct soap*, const struct ns__unRegistNode *, const char*, const char*);

#define soap_read_ns__unRegistNode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__unRegistNode(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__unRegistNode * SOAP_FMAC4 soap_get_ns__unRegistNode(struct soap*, struct ns__unRegistNode *, const char*, const char*);

#define soap_new_ns__unRegistNode(soap, n) ::soap_instantiate_ns__unRegistNode(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__unRegistNode(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__unRegistNode * SOAP_FMAC2 soap_instantiate_ns__unRegistNode(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__unRegistNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__unRegistNodeResponse
#define SOAP_TYPE_ns__unRegistNodeResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__unRegistNodeResponse(struct soap*, struct ns__unRegistNodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__unRegistNodeResponse(struct soap*, const struct ns__unRegistNodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__unRegistNodeResponse(struct soap*, const char*, int, const struct ns__unRegistNodeResponse *, const char*);
SOAP_FMAC3 struct ns__unRegistNodeResponse * SOAP_FMAC4 soap_in_ns__unRegistNodeResponse(struct soap*, const char*, struct ns__unRegistNodeResponse *, const char*);

#define soap_write_ns__unRegistNodeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__unRegistNodeResponse(soap, data), 0) || soap_put_ns__unRegistNodeResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__unRegistNodeResponse(struct soap*, const struct ns__unRegistNodeResponse *, const char*, const char*);

#define soap_read_ns__unRegistNodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__unRegistNodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__unRegistNodeResponse * SOAP_FMAC4 soap_get_ns__unRegistNodeResponse(struct soap*, struct ns__unRegistNodeResponse *, const char*, const char*);

#define soap_new_ns__unRegistNodeResponse(soap, n) ::soap_instantiate_ns__unRegistNodeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__unRegistNodeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__unRegistNodeResponse * SOAP_FMAC2 soap_instantiate_ns__unRegistNodeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__unRegistNodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__registNode
#define SOAP_TYPE_ns__registNode (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__registNode(struct soap*, struct ns__registNode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__registNode(struct soap*, const struct ns__registNode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__registNode(struct soap*, const char*, int, const struct ns__registNode *, const char*);
SOAP_FMAC3 struct ns__registNode * SOAP_FMAC4 soap_in_ns__registNode(struct soap*, const char*, struct ns__registNode *, const char*);

#define soap_write_ns__registNode(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__registNode(soap, data), 0) || soap_put_ns__registNode(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__registNode(struct soap*, const struct ns__registNode *, const char*, const char*);

#define soap_read_ns__registNode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__registNode(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__registNode * SOAP_FMAC4 soap_get_ns__registNode(struct soap*, struct ns__registNode *, const char*, const char*);

#define soap_new_ns__registNode(soap, n) ::soap_instantiate_ns__registNode(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__registNode(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__registNode * SOAP_FMAC2 soap_instantiate_ns__registNode(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__registNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__registNodeResponse
#define SOAP_TYPE_ns__registNodeResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__registNodeResponse(struct soap*, struct ns__registNodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__registNodeResponse(struct soap*, const struct ns__registNodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__registNodeResponse(struct soap*, const char*, int, const struct ns__registNodeResponse *, const char*);
SOAP_FMAC3 struct ns__registNodeResponse * SOAP_FMAC4 soap_in_ns__registNodeResponse(struct soap*, const char*, struct ns__registNodeResponse *, const char*);

#define soap_write_ns__registNodeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__registNodeResponse(soap, data), 0) || soap_put_ns__registNodeResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__registNodeResponse(struct soap*, const struct ns__registNodeResponse *, const char*, const char*);

#define soap_read_ns__registNodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__registNodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__registNodeResponse * SOAP_FMAC4 soap_get_ns__registNodeResponse(struct soap*, struct ns__registNodeResponse *, const char*, const char*);

#define soap_new_ns__registNodeResponse(soap, n) ::soap_instantiate_ns__registNodeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__registNodeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__registNodeResponse * SOAP_FMAC2 soap_instantiate_ns__registNodeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__registNodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__sendConectionsProblem
#define SOAP_TYPE_ns__sendConectionsProblem (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sendConectionsProblem(struct soap*, struct ns__sendConectionsProblem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sendConectionsProblem(struct soap*, const struct ns__sendConectionsProblem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sendConectionsProblem(struct soap*, const char*, int, const struct ns__sendConectionsProblem *, const char*);
SOAP_FMAC3 struct ns__sendConectionsProblem * SOAP_FMAC4 soap_in_ns__sendConectionsProblem(struct soap*, const char*, struct ns__sendConectionsProblem *, const char*);

#define soap_write_ns__sendConectionsProblem(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sendConectionsProblem(soap, data), 0) || soap_put_ns__sendConectionsProblem(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sendConectionsProblem(struct soap*, const struct ns__sendConectionsProblem *, const char*, const char*);

#define soap_read_ns__sendConectionsProblem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sendConectionsProblem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__sendConectionsProblem * SOAP_FMAC4 soap_get_ns__sendConectionsProblem(struct soap*, struct ns__sendConectionsProblem *, const char*, const char*);

#define soap_new_ns__sendConectionsProblem(soap, n) ::soap_instantiate_ns__sendConectionsProblem(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sendConectionsProblem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sendConectionsProblem * SOAP_FMAC2 soap_instantiate_ns__sendConectionsProblem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sendConectionsProblem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__sendConectionsProblemResponse
#define SOAP_TYPE_ns__sendConectionsProblemResponse (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sendConectionsProblemResponse(struct soap*, struct ns__sendConectionsProblemResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sendConectionsProblemResponse(struct soap*, const struct ns__sendConectionsProblemResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sendConectionsProblemResponse(struct soap*, const char*, int, const struct ns__sendConectionsProblemResponse *, const char*);
SOAP_FMAC3 struct ns__sendConectionsProblemResponse * SOAP_FMAC4 soap_in_ns__sendConectionsProblemResponse(struct soap*, const char*, struct ns__sendConectionsProblemResponse *, const char*);

#define soap_write_ns__sendConectionsProblemResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sendConectionsProblemResponse(soap, data), 0) || soap_put_ns__sendConectionsProblemResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sendConectionsProblemResponse(struct soap*, const struct ns__sendConectionsProblemResponse *, const char*, const char*);

#define soap_read_ns__sendConectionsProblemResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sendConectionsProblemResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__sendConectionsProblemResponse * SOAP_FMAC4 soap_get_ns__sendConectionsProblemResponse(struct soap*, struct ns__sendConectionsProblemResponse *, const char*, const char*);

#define soap_new_ns__sendConectionsProblemResponse(soap, n) ::soap_instantiate_ns__sendConectionsProblemResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sendConectionsProblemResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sendConectionsProblemResponse * SOAP_FMAC2 soap_instantiate_ns__sendConectionsProblemResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sendConectionsProblemResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setConections
#define SOAP_TYPE_ns__setConections (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setConections(struct soap*, struct ns__setConections *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setConections(struct soap*, const struct ns__setConections *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setConections(struct soap*, const char*, int, const struct ns__setConections *, const char*);
SOAP_FMAC3 struct ns__setConections * SOAP_FMAC4 soap_in_ns__setConections(struct soap*, const char*, struct ns__setConections *, const char*);

#define soap_write_ns__setConections(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setConections(soap, data), 0) || soap_put_ns__setConections(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setConections(struct soap*, const struct ns__setConections *, const char*, const char*);

#define soap_read_ns__setConections(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setConections(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setConections * SOAP_FMAC4 soap_get_ns__setConections(struct soap*, struct ns__setConections *, const char*, const char*);

#define soap_new_ns__setConections(soap, n) ::soap_instantiate_ns__setConections(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setConections(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setConections * SOAP_FMAC2 soap_instantiate_ns__setConections(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setConections(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setConectionsResponse
#define SOAP_TYPE_ns__setConectionsResponse (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setConectionsResponse(struct soap*, struct ns__setConectionsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setConectionsResponse(struct soap*, const struct ns__setConectionsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setConectionsResponse(struct soap*, const char*, int, const struct ns__setConectionsResponse *, const char*);
SOAP_FMAC3 struct ns__setConectionsResponse * SOAP_FMAC4 soap_in_ns__setConectionsResponse(struct soap*, const char*, struct ns__setConectionsResponse *, const char*);

#define soap_write_ns__setConectionsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setConectionsResponse(soap, data), 0) || soap_put_ns__setConectionsResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setConectionsResponse(struct soap*, const struct ns__setConectionsResponse *, const char*, const char*);

#define soap_read_ns__setConectionsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setConectionsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setConectionsResponse * SOAP_FMAC4 soap_get_ns__setConectionsResponse(struct soap*, struct ns__setConectionsResponse *, const char*, const char*);

#define soap_new_ns__setConectionsResponse(soap, n) ::soap_instantiate_ns__setConectionsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setConectionsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setConectionsResponse * SOAP_FMAC2 soap_instantiate_ns__setConectionsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setConectionsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__runAlgorithm
#define SOAP_TYPE_ns__runAlgorithm (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__runAlgorithm(struct soap*, struct ns__runAlgorithm *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__runAlgorithm(struct soap*, const struct ns__runAlgorithm *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__runAlgorithm(struct soap*, const char*, int, const struct ns__runAlgorithm *, const char*);
SOAP_FMAC3 struct ns__runAlgorithm * SOAP_FMAC4 soap_in_ns__runAlgorithm(struct soap*, const char*, struct ns__runAlgorithm *, const char*);

#define soap_write_ns__runAlgorithm(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__runAlgorithm(soap, data), 0) || soap_put_ns__runAlgorithm(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__runAlgorithm(struct soap*, const struct ns__runAlgorithm *, const char*, const char*);

#define soap_read_ns__runAlgorithm(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__runAlgorithm(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__runAlgorithm * SOAP_FMAC4 soap_get_ns__runAlgorithm(struct soap*, struct ns__runAlgorithm *, const char*, const char*);

#define soap_new_ns__runAlgorithm(soap, n) ::soap_instantiate_ns__runAlgorithm(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__runAlgorithm(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__runAlgorithm * SOAP_FMAC2 soap_instantiate_ns__runAlgorithm(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__runAlgorithm(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__runAlgorithmResponse
#define SOAP_TYPE_ns__runAlgorithmResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__runAlgorithmResponse(struct soap*, struct ns__runAlgorithmResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__runAlgorithmResponse(struct soap*, const struct ns__runAlgorithmResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__runAlgorithmResponse(struct soap*, const char*, int, const struct ns__runAlgorithmResponse *, const char*);
SOAP_FMAC3 struct ns__runAlgorithmResponse * SOAP_FMAC4 soap_in_ns__runAlgorithmResponse(struct soap*, const char*, struct ns__runAlgorithmResponse *, const char*);

#define soap_write_ns__runAlgorithmResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__runAlgorithmResponse(soap, data), 0) || soap_put_ns__runAlgorithmResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__runAlgorithmResponse(struct soap*, const struct ns__runAlgorithmResponse *, const char*, const char*);

#define soap_read_ns__runAlgorithmResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__runAlgorithmResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__runAlgorithmResponse * SOAP_FMAC4 soap_get_ns__runAlgorithmResponse(struct soap*, struct ns__runAlgorithmResponse *, const char*, const char*);

#define soap_new_ns__runAlgorithmResponse(soap, n) ::soap_instantiate_ns__runAlgorithmResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__runAlgorithmResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__runAlgorithmResponse * SOAP_FMAC2 soap_instantiate_ns__runAlgorithmResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__runAlgorithmResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setParameter
#define SOAP_TYPE_ns__setParameter (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setParameter(struct soap*, struct ns__setParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setParameter(struct soap*, const struct ns__setParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setParameter(struct soap*, const char*, int, const struct ns__setParameter *, const char*);
SOAP_FMAC3 struct ns__setParameter * SOAP_FMAC4 soap_in_ns__setParameter(struct soap*, const char*, struct ns__setParameter *, const char*);

#define soap_write_ns__setParameter(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setParameter(soap, data), 0) || soap_put_ns__setParameter(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setParameter(struct soap*, const struct ns__setParameter *, const char*, const char*);

#define soap_read_ns__setParameter(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setParameter(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setParameter * SOAP_FMAC4 soap_get_ns__setParameter(struct soap*, struct ns__setParameter *, const char*, const char*);

#define soap_new_ns__setParameter(soap, n) ::soap_instantiate_ns__setParameter(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setParameter(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setParameter * SOAP_FMAC2 soap_instantiate_ns__setParameter(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setParameter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setParameterResponse
#define SOAP_TYPE_ns__setParameterResponse (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setParameterResponse(struct soap*, struct ns__setParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setParameterResponse(struct soap*, const struct ns__setParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setParameterResponse(struct soap*, const char*, int, const struct ns__setParameterResponse *, const char*);
SOAP_FMAC3 struct ns__setParameterResponse * SOAP_FMAC4 soap_in_ns__setParameterResponse(struct soap*, const char*, struct ns__setParameterResponse *, const char*);

#define soap_write_ns__setParameterResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setParameterResponse(soap, data), 0) || soap_put_ns__setParameterResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setParameterResponse(struct soap*, const struct ns__setParameterResponse *, const char*, const char*);

#define soap_read_ns__setParameterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setParameterResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setParameterResponse * SOAP_FMAC4 soap_get_ns__setParameterResponse(struct soap*, struct ns__setParameterResponse *, const char*, const char*);

#define soap_new_ns__setParameterResponse(soap, n) ::soap_instantiate_ns__setParameterResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setParameterResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setParameterResponse * SOAP_FMAC2 soap_instantiate_ns__setParameterResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setParameterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getStatus
#define SOAP_TYPE_ns__getStatus (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getStatus(struct soap*, struct ns__getStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getStatus(struct soap*, const struct ns__getStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getStatus(struct soap*, const char*, int, const struct ns__getStatus *, const char*);
SOAP_FMAC3 struct ns__getStatus * SOAP_FMAC4 soap_in_ns__getStatus(struct soap*, const char*, struct ns__getStatus *, const char*);

#define soap_write_ns__getStatus(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getStatus(soap, data), 0) || soap_put_ns__getStatus(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getStatus(struct soap*, const struct ns__getStatus *, const char*, const char*);

#define soap_read_ns__getStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getStatus(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getStatus * SOAP_FMAC4 soap_get_ns__getStatus(struct soap*, struct ns__getStatus *, const char*, const char*);

#define soap_new_ns__getStatus(soap, n) ::soap_instantiate_ns__getStatus(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getStatus(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getStatus * SOAP_FMAC2 soap_instantiate_ns__getStatus(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getStatusResponse
#define SOAP_TYPE_ns__getStatusResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getStatusResponse(struct soap*, struct ns__getStatusResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getStatusResponse(struct soap*, const struct ns__getStatusResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getStatusResponse(struct soap*, const char*, int, const struct ns__getStatusResponse *, const char*);
SOAP_FMAC3 struct ns__getStatusResponse * SOAP_FMAC4 soap_in_ns__getStatusResponse(struct soap*, const char*, struct ns__getStatusResponse *, const char*);

#define soap_write_ns__getStatusResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getStatusResponse(soap, data), 0) || soap_put_ns__getStatusResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getStatusResponse(struct soap*, const struct ns__getStatusResponse *, const char*, const char*);

#define soap_read_ns__getStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__getStatusResponse * SOAP_FMAC4 soap_get_ns__getStatusResponse(struct soap*, struct ns__getStatusResponse *, const char*, const char*);

#define soap_new_ns__getStatusResponse(soap, n) ::soap_instantiate_ns__getStatusResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getStatusResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getStatusResponse * SOAP_FMAC2 soap_instantiate_ns__getStatusResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getStatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__exchangeSpecimens
#define SOAP_TYPE_ns__exchangeSpecimens (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__exchangeSpecimens(struct soap*, struct ns__exchangeSpecimens *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__exchangeSpecimens(struct soap*, const struct ns__exchangeSpecimens *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__exchangeSpecimens(struct soap*, const char*, int, const struct ns__exchangeSpecimens *, const char*);
SOAP_FMAC3 struct ns__exchangeSpecimens * SOAP_FMAC4 soap_in_ns__exchangeSpecimens(struct soap*, const char*, struct ns__exchangeSpecimens *, const char*);

#define soap_write_ns__exchangeSpecimens(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__exchangeSpecimens(soap, data), 0) || soap_put_ns__exchangeSpecimens(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__exchangeSpecimens(struct soap*, const struct ns__exchangeSpecimens *, const char*, const char*);

#define soap_read_ns__exchangeSpecimens(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__exchangeSpecimens(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__exchangeSpecimens * SOAP_FMAC4 soap_get_ns__exchangeSpecimens(struct soap*, struct ns__exchangeSpecimens *, const char*, const char*);

#define soap_new_ns__exchangeSpecimens(soap, n) ::soap_instantiate_ns__exchangeSpecimens(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__exchangeSpecimens(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__exchangeSpecimens * SOAP_FMAC2 soap_instantiate_ns__exchangeSpecimens(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__exchangeSpecimens(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__exchangeSpecimensResponse
#define SOAP_TYPE_ns__exchangeSpecimensResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__exchangeSpecimensResponse(struct soap*, struct ns__exchangeSpecimensResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__exchangeSpecimensResponse(struct soap*, const struct ns__exchangeSpecimensResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__exchangeSpecimensResponse(struct soap*, const char*, int, const struct ns__exchangeSpecimensResponse *, const char*);
SOAP_FMAC3 struct ns__exchangeSpecimensResponse * SOAP_FMAC4 soap_in_ns__exchangeSpecimensResponse(struct soap*, const char*, struct ns__exchangeSpecimensResponse *, const char*);

#define soap_write_ns__exchangeSpecimensResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__exchangeSpecimensResponse(soap, data), 0) || soap_put_ns__exchangeSpecimensResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__exchangeSpecimensResponse(struct soap*, const struct ns__exchangeSpecimensResponse *, const char*, const char*);

#define soap_read_ns__exchangeSpecimensResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__exchangeSpecimensResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__exchangeSpecimensResponse * SOAP_FMAC4 soap_get_ns__exchangeSpecimensResponse(struct soap*, struct ns__exchangeSpecimensResponse *, const char*, const char*);

#define soap_new_ns__exchangeSpecimensResponse(soap, n) ::soap_instantiate_ns__exchangeSpecimensResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__exchangeSpecimensResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__exchangeSpecimensResponse * SOAP_FMAC2 soap_instantiate_ns__exchangeSpecimensResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__exchangeSpecimensResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setEndPoint
#define SOAP_TYPE_ns__setEndPoint (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setEndPoint(struct soap*, struct ns__setEndPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setEndPoint(struct soap*, const struct ns__setEndPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setEndPoint(struct soap*, const char*, int, const struct ns__setEndPoint *, const char*);
SOAP_FMAC3 struct ns__setEndPoint * SOAP_FMAC4 soap_in_ns__setEndPoint(struct soap*, const char*, struct ns__setEndPoint *, const char*);

#define soap_write_ns__setEndPoint(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setEndPoint(soap, data), 0) || soap_put_ns__setEndPoint(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setEndPoint(struct soap*, const struct ns__setEndPoint *, const char*, const char*);

#define soap_read_ns__setEndPoint(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setEndPoint(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setEndPoint * SOAP_FMAC4 soap_get_ns__setEndPoint(struct soap*, struct ns__setEndPoint *, const char*, const char*);

#define soap_new_ns__setEndPoint(soap, n) ::soap_instantiate_ns__setEndPoint(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setEndPoint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setEndPoint * SOAP_FMAC2 soap_instantiate_ns__setEndPoint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setEndPoint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__setEndPointResponse
#define SOAP_TYPE_ns__setEndPointResponse (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__setEndPointResponse(struct soap*, struct ns__setEndPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__setEndPointResponse(struct soap*, const struct ns__setEndPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__setEndPointResponse(struct soap*, const char*, int, const struct ns__setEndPointResponse *, const char*);
SOAP_FMAC3 struct ns__setEndPointResponse * SOAP_FMAC4 soap_in_ns__setEndPointResponse(struct soap*, const char*, struct ns__setEndPointResponse *, const char*);

#define soap_write_ns__setEndPointResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__setEndPointResponse(soap, data), 0) || soap_put_ns__setEndPointResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__setEndPointResponse(struct soap*, const struct ns__setEndPointResponse *, const char*, const char*);

#define soap_read_ns__setEndPointResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__setEndPointResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns__setEndPointResponse * SOAP_FMAC4 soap_get_ns__setEndPointResponse(struct soap*, struct ns__setEndPointResponse *, const char*, const char*);

#define soap_new_ns__setEndPointResponse(soap, n) ::soap_instantiate_ns__setEndPointResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__setEndPointResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__setEndPointResponse * SOAP_FMAC2 soap_instantiate_ns__setEndPointResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__setEndPointResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
