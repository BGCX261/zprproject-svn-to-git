/* soapNetIntService.cpp
   Generated by gSOAP 2.7.15 from NetInteface.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapNetIntService.h"

NetIntService::NetIntService()
{	NetIntService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

NetIntService::NetIntService(const struct soap &_soap) :soap(_soap)
{ }

NetIntService::NetIntService(soap_mode iomode)
{	NetIntService_init(iomode, iomode);
}

NetIntService::NetIntService(soap_mode imode, soap_mode omode)
{	NetIntService_init(imode, omode);
}

NetIntService::~NetIntService()
{ }

void NetIntService::NetIntService_init(soap_mode imode, soap_mode omode)
{	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns", "urn:hell", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_imode(this, imode);
	soap_omode(this, omode);
	if (!this->namespaces)
		this->namespaces = namespaces;
};

void NetIntService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

NetIntService *NetIntService::copy()
{	NetIntService *dup = new NetIntService(*(struct soap*)this);
	return dup;
}

int NetIntService::soap_close_socket()
{	return soap_closesock(this);
}

int NetIntService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int NetIntService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int NetIntService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int NetIntService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void NetIntService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void NetIntService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *NetIntService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void NetIntService::soap_noheader()
{	header = NULL;
}

int NetIntService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET NetIntService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET NetIntService::accept()
{	return soap_accept(this);
}

int NetIntService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else 
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve_ns__setEndPoint(NetIntService*);
static int serve_ns__exchangeSpecimens(NetIntService*);
static int serve_ns__getStatus(NetIntService*);
static int serve_ns__setParameter(NetIntService*);
static int serve_ns__runAlgorithm(NetIntService*);
static int serve_ns__setConections(NetIntService*);
static int serve_ns__sendConectionsProblem(NetIntService*);
static int serve_ns__registNode(NetIntService*);
static int serve_ns__unRegistNode(NetIntService*);
static int serve_ns__getSpecimens(NetIntService*);
static int serve_ns__getAppStatus(NetIntService*);
static int serve_ns__setAppParameter(NetIntService*);
static int serve_ns__newTask(NetIntService*);
static int serve_ns__getConnectedNodes(NetIntService*);
static int serve_ns__sendMessage(NetIntService*);

int NetIntService::dispatch()
{	if (soap_peek_element(this))
		return this->error;
	if (!soap_match_tag(this, this->tag, "ns:setEndPoint"))
		return serve_ns__setEndPoint(this);
	if (!soap_match_tag(this, this->tag, "ns:exchangeSpecimens"))
		return serve_ns__exchangeSpecimens(this);
	if (!soap_match_tag(this, this->tag, "ns:getStatus"))
		return serve_ns__getStatus(this);
	if (!soap_match_tag(this, this->tag, "ns:setParameter"))
		return serve_ns__setParameter(this);
	if (!soap_match_tag(this, this->tag, "ns:runAlgorithm"))
		return serve_ns__runAlgorithm(this);
	if (!soap_match_tag(this, this->tag, "ns:setConections"))
		return serve_ns__setConections(this);
	if (!soap_match_tag(this, this->tag, "ns:sendConectionsProblem"))
		return serve_ns__sendConectionsProblem(this);
	if (!soap_match_tag(this, this->tag, "ns:registNode"))
		return serve_ns__registNode(this);
	if (!soap_match_tag(this, this->tag, "ns:unRegistNode"))
		return serve_ns__unRegistNode(this);
	if (!soap_match_tag(this, this->tag, "ns:getSpecimens"))
		return serve_ns__getSpecimens(this);
	if (!soap_match_tag(this, this->tag, "ns:getAppStatus"))
		return serve_ns__getAppStatus(this);
	if (!soap_match_tag(this, this->tag, "ns:setAppParameter"))
		return serve_ns__setAppParameter(this);
	if (!soap_match_tag(this, this->tag, "ns:newTask"))
		return serve_ns__newTask(this);
	if (!soap_match_tag(this, this->tag, "ns:getConnectedNodes"))
		return serve_ns__getConnectedNodes(this);
	if (!soap_match_tag(this, this->tag, "ns:sendMessage"))
		return serve_ns__sendMessage(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve_ns__setEndPoint(NetIntService *soap)
{	struct ns__setEndPoint soap_tmp_ns__setEndPoint;
	struct ns__setEndPointResponse soap_tmp_ns__setEndPointResponse;
	soap_default_ns__setEndPointResponse(soap, &soap_tmp_ns__setEndPointResponse);
	soap_default_ns__setEndPoint(soap, &soap_tmp_ns__setEndPoint);
	soap->encodingStyle = "";
	if (!soap_get_ns__setEndPoint(soap, &soap_tmp_ns__setEndPoint, "ns:setEndPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->setEndPoint(soap_tmp_ns__setEndPoint.endPoint, soap_tmp_ns__setEndPointResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setEndPointResponse(soap, &soap_tmp_ns__setEndPointResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__setEndPointResponse(soap, &soap_tmp_ns__setEndPointResponse, "ns:setEndPointResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setEndPointResponse(soap, &soap_tmp_ns__setEndPointResponse, "ns:setEndPointResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__exchangeSpecimens(NetIntService *soap)
{	struct ns__exchangeSpecimens soap_tmp_ns__exchangeSpecimens;
	struct ns__exchangeSpecimensResponse soap_tmp_ns__exchangeSpecimensResponse;
	soap_default_ns__exchangeSpecimensResponse(soap, &soap_tmp_ns__exchangeSpecimensResponse);
	soap_default_ns__exchangeSpecimens(soap, &soap_tmp_ns__exchangeSpecimens);
	soap->encodingStyle = "";
	if (!soap_get_ns__exchangeSpecimens(soap, &soap_tmp_ns__exchangeSpecimens, "ns:exchangeSpecimens", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->exchangeSpecimens(soap_tmp_ns__exchangeSpecimens.specimentList, soap_tmp_ns__exchangeSpecimensResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__exchangeSpecimensResponse(soap, &soap_tmp_ns__exchangeSpecimensResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__exchangeSpecimensResponse(soap, &soap_tmp_ns__exchangeSpecimensResponse, "ns:exchangeSpecimensResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__exchangeSpecimensResponse(soap, &soap_tmp_ns__exchangeSpecimensResponse, "ns:exchangeSpecimensResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__getStatus(NetIntService *soap)
{	struct ns__getStatus soap_tmp_ns__getStatus;
	struct ns__getStatusResponse soap_tmp_ns__getStatusResponse;
	soap_default_ns__getStatusResponse(soap, &soap_tmp_ns__getStatusResponse);
	soap_default_ns__getStatus(soap, &soap_tmp_ns__getStatus);
	soap->encodingStyle = "";
	if (!soap_get_ns__getStatus(soap, &soap_tmp_ns__getStatus, "ns:getStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getStatus(soap_tmp_ns__getStatusResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getStatusResponse(soap, &soap_tmp_ns__getStatusResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getStatusResponse(soap, &soap_tmp_ns__getStatusResponse, "ns:getStatusResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getStatusResponse(soap, &soap_tmp_ns__getStatusResponse, "ns:getStatusResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__setParameter(NetIntService *soap)
{	struct ns__setParameter soap_tmp_ns__setParameter;
	struct ns__setParameterResponse soap_tmp_ns__setParameterResponse;
	soap_default_ns__setParameterResponse(soap, &soap_tmp_ns__setParameterResponse);
	soap_default_ns__setParameter(soap, &soap_tmp_ns__setParameter);
	soap->encodingStyle = "";
	if (!soap_get_ns__setParameter(soap, &soap_tmp_ns__setParameter, "ns:setParameter", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->setParameter(soap_tmp_ns__setParameter.parameterChange, soap_tmp_ns__setParameterResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setParameterResponse(soap, &soap_tmp_ns__setParameterResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__setParameterResponse(soap, &soap_tmp_ns__setParameterResponse, "ns:setParameterResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setParameterResponse(soap, &soap_tmp_ns__setParameterResponse, "ns:setParameterResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__runAlgorithm(NetIntService *soap)
{	struct ns__runAlgorithm soap_tmp_ns__runAlgorithm;
	struct ns__runAlgorithmResponse soap_tmp_ns__runAlgorithmResponse;
	soap_default_ns__runAlgorithmResponse(soap, &soap_tmp_ns__runAlgorithmResponse);
	soap_default_ns__runAlgorithm(soap, &soap_tmp_ns__runAlgorithm);
	soap->encodingStyle = "";
	if (!soap_get_ns__runAlgorithm(soap, &soap_tmp_ns__runAlgorithm, "ns:runAlgorithm", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->runAlgorithm(soap_tmp_ns__runAlgorithmResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__runAlgorithmResponse(soap, &soap_tmp_ns__runAlgorithmResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__runAlgorithmResponse(soap, &soap_tmp_ns__runAlgorithmResponse, "ns:runAlgorithmResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__runAlgorithmResponse(soap, &soap_tmp_ns__runAlgorithmResponse, "ns:runAlgorithmResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__setConections(NetIntService *soap)
{	struct ns__setConections soap_tmp_ns__setConections;
	struct ns__setConectionsResponse soap_tmp_ns__setConectionsResponse;
	soap_default_ns__setConectionsResponse(soap, &soap_tmp_ns__setConectionsResponse);
	soap_default_ns__setConections(soap, &soap_tmp_ns__setConections);
	soap->encodingStyle = "";
	if (!soap_get_ns__setConections(soap, &soap_tmp_ns__setConections, "ns:setConections", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->setConections(soap_tmp_ns__setConections.conections, soap_tmp_ns__setConectionsResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setConectionsResponse(soap, &soap_tmp_ns__setConectionsResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__setConectionsResponse(soap, &soap_tmp_ns__setConectionsResponse, "ns:setConectionsResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setConectionsResponse(soap, &soap_tmp_ns__setConectionsResponse, "ns:setConectionsResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__sendConectionsProblem(NetIntService *soap)
{	struct ns__sendConectionsProblem soap_tmp_ns__sendConectionsProblem;
	struct ns__sendConectionsProblemResponse soap_tmp_ns__sendConectionsProblemResponse;
	soap_default_ns__sendConectionsProblemResponse(soap, &soap_tmp_ns__sendConectionsProblemResponse);
	soap_default_ns__sendConectionsProblem(soap, &soap_tmp_ns__sendConectionsProblem);
	soap->encodingStyle = "";
	if (!soap_get_ns__sendConectionsProblem(soap, &soap_tmp_ns__sendConectionsProblem, "ns:sendConectionsProblem", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->sendConectionsProblem(soap_tmp_ns__sendConectionsProblem.conectionProblem, soap_tmp_ns__sendConectionsProblemResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__sendConectionsProblemResponse(soap, &soap_tmp_ns__sendConectionsProblemResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__sendConectionsProblemResponse(soap, &soap_tmp_ns__sendConectionsProblemResponse, "ns:sendConectionsProblemResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__sendConectionsProblemResponse(soap, &soap_tmp_ns__sendConectionsProblemResponse, "ns:sendConectionsProblemResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__registNode(NetIntService *soap)
{	struct ns__registNode soap_tmp_ns__registNode;
	struct ns__registNodeResponse soap_tmp_ns__registNodeResponse;
	soap_default_ns__registNodeResponse(soap, &soap_tmp_ns__registNodeResponse);
	soap_default_ns__registNode(soap, &soap_tmp_ns__registNode);
	soap->encodingStyle = "";
	if (!soap_get_ns__registNode(soap, &soap_tmp_ns__registNode, "ns:registNode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->registNode(soap_tmp_ns__registNode.endPoint, soap_tmp_ns__registNodeResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__registNodeResponse(soap, &soap_tmp_ns__registNodeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__registNodeResponse(soap, &soap_tmp_ns__registNodeResponse, "ns:registNodeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__registNodeResponse(soap, &soap_tmp_ns__registNodeResponse, "ns:registNodeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__unRegistNode(NetIntService *soap)
{	struct ns__unRegistNode soap_tmp_ns__unRegistNode;
	struct ns__unRegistNodeResponse soap_tmp_ns__unRegistNodeResponse;
	soap_default_ns__unRegistNodeResponse(soap, &soap_tmp_ns__unRegistNodeResponse);
	soap_default_ns__unRegistNode(soap, &soap_tmp_ns__unRegistNode);
	soap->encodingStyle = "";
	if (!soap_get_ns__unRegistNode(soap, &soap_tmp_ns__unRegistNode, "ns:unRegistNode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->unRegistNode(soap_tmp_ns__unRegistNode.endPoint, soap_tmp_ns__unRegistNodeResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__unRegistNodeResponse(soap, &soap_tmp_ns__unRegistNodeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__unRegistNodeResponse(soap, &soap_tmp_ns__unRegistNodeResponse, "ns:unRegistNodeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__unRegistNodeResponse(soap, &soap_tmp_ns__unRegistNodeResponse, "ns:unRegistNodeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__getSpecimens(NetIntService *soap)
{	struct ns__getSpecimens soap_tmp_ns__getSpecimens;
	struct ns__getSpecimensResponse soap_tmp_ns__getSpecimensResponse;
	soap_default_ns__getSpecimensResponse(soap, &soap_tmp_ns__getSpecimensResponse);
	soap_default_ns__getSpecimens(soap, &soap_tmp_ns__getSpecimens);
	soap->encodingStyle = "";
	if (!soap_get_ns__getSpecimens(soap, &soap_tmp_ns__getSpecimens, "ns:getSpecimens", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getSpecimens(soap_tmp_ns__getSpecimensResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getSpecimensResponse(soap, &soap_tmp_ns__getSpecimensResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getSpecimensResponse(soap, &soap_tmp_ns__getSpecimensResponse, "ns:getSpecimensResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getSpecimensResponse(soap, &soap_tmp_ns__getSpecimensResponse, "ns:getSpecimensResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__getAppStatus(NetIntService *soap)
{	struct ns__getAppStatus soap_tmp_ns__getAppStatus;
	struct ns__getAppStatusResponse soap_tmp_ns__getAppStatusResponse;
	soap_default_ns__getAppStatusResponse(soap, &soap_tmp_ns__getAppStatusResponse);
	soap_default_ns__getAppStatus(soap, &soap_tmp_ns__getAppStatus);
	soap->encodingStyle = "";
	if (!soap_get_ns__getAppStatus(soap, &soap_tmp_ns__getAppStatus, "ns:getAppStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getAppStatus(soap_tmp_ns__getAppStatusResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getAppStatusResponse(soap, &soap_tmp_ns__getAppStatusResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getAppStatusResponse(soap, &soap_tmp_ns__getAppStatusResponse, "ns:getAppStatusResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getAppStatusResponse(soap, &soap_tmp_ns__getAppStatusResponse, "ns:getAppStatusResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__setAppParameter(NetIntService *soap)
{	struct ns__setAppParameter soap_tmp_ns__setAppParameter;
	struct ns__setAppParameterResponse soap_tmp_ns__setAppParameterResponse;
	soap_default_ns__setAppParameterResponse(soap, &soap_tmp_ns__setAppParameterResponse);
	soap_default_ns__setAppParameter(soap, &soap_tmp_ns__setAppParameter);
	soap->encodingStyle = "";
	if (!soap_get_ns__setAppParameter(soap, &soap_tmp_ns__setAppParameter, "ns:setAppParameter", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->setAppParameter(soap_tmp_ns__setAppParameter.parameterChange, soap_tmp_ns__setAppParameterResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__setAppParameterResponse(soap, &soap_tmp_ns__setAppParameterResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__setAppParameterResponse(soap, &soap_tmp_ns__setAppParameterResponse, "ns:setAppParameterResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__setAppParameterResponse(soap, &soap_tmp_ns__setAppParameterResponse, "ns:setAppParameterResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__newTask(NetIntService *soap)
{	struct ns__newTask soap_tmp_ns__newTask;
	struct ns__newTaskResponse soap_tmp_ns__newTaskResponse;
	soap_default_ns__newTaskResponse(soap, &soap_tmp_ns__newTaskResponse);
	soap_default_ns__newTask(soap, &soap_tmp_ns__newTask);
	soap->encodingStyle = "";
	if (!soap_get_ns__newTask(soap, &soap_tmp_ns__newTask, "ns:newTask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->newTask(soap_tmp_ns__newTask.task, soap_tmp_ns__newTaskResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__newTaskResponse(soap, &soap_tmp_ns__newTaskResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__newTaskResponse(soap, &soap_tmp_ns__newTaskResponse, "ns:newTaskResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__newTaskResponse(soap, &soap_tmp_ns__newTaskResponse, "ns:newTaskResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__getConnectedNodes(NetIntService *soap)
{	struct ns__getConnectedNodes soap_tmp_ns__getConnectedNodes;
	struct ns__getConnectedNodesResponse soap_tmp_ns__getConnectedNodesResponse;
	soap_default_ns__getConnectedNodesResponse(soap, &soap_tmp_ns__getConnectedNodesResponse);
	soap_default_ns__getConnectedNodes(soap, &soap_tmp_ns__getConnectedNodes);
	soap->encodingStyle = "";
	if (!soap_get_ns__getConnectedNodes(soap, &soap_tmp_ns__getConnectedNodes, "ns:getConnectedNodes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->getConnectedNodes(soap_tmp_ns__getConnectedNodesResponse.conections);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getConnectedNodesResponse(soap, &soap_tmp_ns__getConnectedNodesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getConnectedNodesResponse(soap, &soap_tmp_ns__getConnectedNodesResponse, "ns:getConnectedNodesResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getConnectedNodesResponse(soap, &soap_tmp_ns__getConnectedNodesResponse, "ns:getConnectedNodesResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve_ns__sendMessage(NetIntService *soap)
{	struct ns__sendMessage soap_tmp_ns__sendMessage;
	struct ns__sendMessageResponse soap_tmp_ns__sendMessageResponse;
	soap_default_ns__sendMessageResponse(soap, &soap_tmp_ns__sendMessageResponse);
	soap_default_ns__sendMessage(soap, &soap_tmp_ns__sendMessage);
	soap->encodingStyle = "";
	if (!soap_get_ns__sendMessage(soap, &soap_tmp_ns__sendMessage, "ns:sendMessage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->sendMessage(soap_tmp_ns__sendMessage.message, soap_tmp_ns__sendMessageResponse.result);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__sendMessageResponse(soap, &soap_tmp_ns__sendMessageResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__sendMessageResponse(soap, &soap_tmp_ns__sendMessageResponse, "ns:sendMessageResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__sendMessageResponse(soap, &soap_tmp_ns__sendMessageResponse, "ns:sendMessageResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
